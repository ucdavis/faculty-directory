# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

name: 1.1.$(Date:yyMM).$(build.buildId)

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job:
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core 3.1 sdk'
      inputs:
       packageType: sdk
       version: 3.1.100
       installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: DotNetCoreCLI@2
      displayName: 'Restore Tools'
      inputs:
        command: 'custom'
        custom: 'tool restore'

    - task: DotNetCoreCLI@2
      displayName: 'Build FacultyDirectory MVC project'
      inputs:
        command: 'build'
        projects: './src/FacultyDirectory/FacultyDirectory.csproj'
        arguments: '--configuration $(BuildConfiguration) /property:Version=$(build.buildNumber)'

    - task: DotNetCoreCLI@2
      displayName: 'Run Server Tests'
      inputs:
        command: 'test'

- stage: Publish
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs:
    - job:
      steps:
        - task: DotNetCoreCLI@2
          inputs:
            command: 'custom'
            custom: 'ef migrations script'
            arguments: '--project ./src/FacultyDirectory.Core/FacultyDirectory.Core.csproj --idempotent --output $(build.artifactstagingdirectory)/migrations'

        - task: DotNetCoreCLI@2
          displayName: 'Publish FacultyDirectory MVC project'
          inputs:
            command: 'publish'
            publishWebProjects: true
            zipAfterPublish: false
            modifyOutputPath: false
            projects: './src/FacultyDirectory/FacultyDirectory.csproj'
            arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/'

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact'
          inputs:
            PathtoPublish: '$(build.artifactstagingdirectory)'