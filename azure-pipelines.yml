# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

name: 1.1.$(Date:yyMM).$(build.buildId)

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job:
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core 3.1 sdk'
      inputs:
       packageType: sdk
       version: 3.1.100
       installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: DotNetCoreCLI@2
      displayName: 'Build FacultyDirectory MVC project'
      inputs:
        command: 'build'
        projects: './src/FacultyDirectory/FacultyDirectory.csproj'
        arguments: '--configuration $(BuildConfiguration) /property:Version=$(build.buildNumber)'

    - task: DotNetCoreCLI@2
      displayName: 'Run Server Tests'
      inputs:
        command: 'test'

    - script: npm ci
      displayName: 'Run npm ci (install)'
      workingDirectory: './src/FacultyDirectory/ClientApp'

    - script: npm run test:ci
      displayName: 'Run npm test:ci'
      workingDirectory: './src/FacultyDirectory/ClientApp'
      env:
        CI: true

    - task: PublishTestResults@2
      displayName: 'Publish npm test Results'
      inputs:
        testResultsFiles: '**/junit.xml'
        mergeTestResults: true
      condition: succeededOrFailed()

- stage: Publish
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs:
    - job:
      steps:
        - task: CmdLine@2
          inputs:
            script: 'dotnet tool restore'

        - task: CmdLine@2
          displayName: 'Generate EF Migration Script'
          inputs:
            script: 'dotnet ef migrations script --startup-project ./src/FacultyDirectory/FacultyDirectory.csproj --project ./src/FacultyDirectory.Core/FacultyDirectory.Core.csproj --idempotent --output $(build.artifactstagingdirectory)/migrations.sql'

        - task: DotNetCoreCLI@2
          displayName: 'Publish FacultyDirectory MVC project'
          inputs:
            command: 'publish'
            publishWebProjects: true
            zipAfterPublish: false
            modifyOutputPath: false
            projects: './src/FacultyDirectory/FacultyDirectory.csproj'
            arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/build'

        - task: DotNetCoreCLI@2
          displayName: 'Assemble FacultyDirectory.Jobs.ImportFaculty'
          inputs:
            command: 'publish'
            publishWebProjects: false
            zipAfterPublish: false
            projects: './src/FacultyDirectory.Jobs.ImportFaculty/FacultyDirectory.Jobs.ImportFaculty.csproj'
            arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/build/app_data/jobs/triggered'

        - task: DotNetCoreCLI@2
          displayName: 'Assemble FacultyDirectory.Jobs.ProcessSources'
          inputs:
            command: 'publish'
            publishWebProjects: false
            zipAfterPublish: false
            projects: './src/FacultyDirectory.Jobs.ProcessSources/FacultyDirectory.Jobs.ProcessSources.csproj'
            arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/build/app_data/jobs/triggered'

        - task: DotNetCoreCLI@2
          displayName: 'Assemble FacultyDirectory.Jobs.SyncSites'
          inputs:
            command: 'publish'
            publishWebProjects: false
            zipAfterPublish: false
            projects: './src/FacultyDirectory.Jobs.SyncSites/FacultyDirectory.Jobs.SyncSites.csproj'
            arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/build/app_data/jobs/triggered'

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact'
          inputs:
            PathtoPublish: '$(build.artifactstagingdirectory)'